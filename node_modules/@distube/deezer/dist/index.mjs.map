{"version":3,"sources":["../src/API.ts","../src/index.ts"],"sourcesContent":["import { Pool } from \"undici\";\nimport type { AlbumResponse, PlaylistResponse, TrackResponse } from \"./type\";\n\nconst api = new Pool(\"https://api.deezer.com\");\n\nconst get = async (path: string): Promise<any> => {\n  const { body } = await api.request({\n    path,\n    method: \"GET\",\n  });\n\n  const data: any = await body.json();\n  if (data.error) throw new Error(data.error?.message);\n  return data;\n};\n\nexport const getTrack = async (id: string): Promise<TrackResponse> => get(`/track/${id}`);\n\nexport const getAlbum = async (id: string): Promise<AlbumResponse> => get(`/album/${id}`);\n\nexport const getPlaylist = async (id: string): Promise<PlaylistResponse> => get(`/playlist/${id}`);\n","import { getAlbum, getPlaylist, getTrack } from \"./API\";\nimport { DisTubeError, InfoExtractorPlugin, Playlist, Song } from \"distube\";\nimport type { ResolveOptions } from \"distube\";\n\nconst SUPPORTED_TYPES = [\"album\", \"playlist\", \"track\"];\n\nconst REGEX = /^https?:\\/\\/(?:www\\.)?deezer\\.com\\/(?:[a-z]{2}\\/)?(track|album|playlist)\\/(\\d+)\\/?(?:\\?.*?)?$/;\n\nconst parseURL = (url: string): { type?: string; id?: string } => {\n  const [, type, id] = url.match(REGEX) ?? [];\n  return { type, id };\n};\n\nexport class DeezerPlugin extends InfoExtractorPlugin {\n  validate(url: string) {\n    if (typeof url !== \"string\" || !url.includes(\"deezer\")) return false;\n    const { type, id } = parseURL(url);\n    if (!type || !id || !SUPPORTED_TYPES.includes(type)) return false;\n    return true;\n  }\n\n  async resolve<T>(url: string, options: ResolveOptions<T>): Promise<Song<T> | Playlist<T>> {\n    const { type, id } = parseURL(url);\n    if (!type || !id) throw new DisTubeError(\"DEEZER_PLUGIN_INVALID_URL\", `Invalid Deezer url: ${url}`);\n    const api = type === \"track\" ? getTrack(id) : type === \"album\" ? getAlbum(id) : getPlaylist(id);\n    const data = await api.catch(e => {\n      throw new DisTubeError(\"DEEZER_PLUGIN_API_ERROR\", e.message);\n    });\n    if (!data.type || !SUPPORTED_TYPES.includes(data.type)) {\n      throw new DisTubeError(\"DEEZER_PLUGIN_NOT_SUPPORTED\", \"This deezer link is not supported.\");\n    }\n    if (data.type === \"track\") {\n      return new Song(\n        {\n          plugin: this,\n          source: \"deezer\",\n          playFromSource: false,\n          id: data.id.toString(),\n          url: data.link,\n          name: data.title,\n          uploader: {\n            name: data.artist.name,\n            url: data.artist.link,\n          },\n          thumbnail: data.album.cover_xl || data.album.cover_big || data.album.cover_medium || data.album.cover,\n        },\n        options,\n      );\n    }\n    return new Playlist(\n      {\n        source: \"deezer\",\n        url: data.link,\n        name: data.title,\n        id: data.id.toString(),\n        thumbnail:\n          data.type == \"album\"\n            ? data.cover_xl || data.cover_big || data.cover_medium || data.cover\n            : data.picture_xl || data.picture_big || data.picture_medium || data.picture,\n        songs: data.tracks.data.map(\n          song =>\n            new Song(\n              {\n                plugin: this,\n                source: \"deezer\",\n                playFromSource: false,\n                id: song.id.toString(),\n                url: song.link,\n                name: song.title,\n                uploader: {\n                  name: song.artist.name,\n                },\n                thumbnail: song.album.cover_xl || song.album.cover_big || song.album.cover_medium || song.album.cover,\n              },\n              options,\n            ),\n        ),\n      },\n      options,\n    );\n  }\n\n  createSearchQuery<T>(song: Song<T>) {\n    return `${song.name} ${song.uploader.name}`;\n  }\n\n  getRelatedSongs() {\n    return [];\n  }\n}\n\nexport default DeezerPlugin;\n"],"mappings":"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","names":["api"]}